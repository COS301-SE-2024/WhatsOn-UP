// Mocks generated by Mockito 5.4.4 from annotations
// in firstapp/test/api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:typed_data' as _i13;
import 'dart:ui' as _i10;

import 'package:firstapp/providers/events_providers.dart' as _i7;
import 'package:firstapp/providers/notification_providers.dart' as _i15;
import 'package:firstapp/providers/user_provider.dart' as _i3;
import 'package:firstapp/services/api.dart' as _i2;
import 'package:firstapp/widgets/event_card.dart' as _i9;
import 'package:firstapp/widgets/notification_card.dart' as _i12;
import 'package:firstapp/widgets/theme_manager.dart' as _i16;
import 'package:flutter/material.dart' as _i5;
import 'package:image_picker/image_picker.dart' as _i14;
import 'package:image_picker_platform_interface/image_picker_platform_interface.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:supabase_auth_ui/supabase_auth_ui.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApi_0 extends _i1.SmartFake implements _i2.Api {
  _FakeApi_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneralApplications_1 extends _i1.SmartFake
    implements _i3.GeneralApplications {
  _FakeGeneralApplications_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLostDataResponse_2 extends _i1.SmartFake
    implements _i4.LostDataResponse {
  _FakeLostDataResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeData_3 extends _i1.SmartFake implements _i5.ThemeData {
  _FakeThemeData_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i5.DiagnosticLevel? minLevel = _i5.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeSupabaseClient_4 extends _i1.SmartFake
    implements _i6.SupabaseClient {
  _FakeSupabaseClient_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFunctionsClient_5 extends _i1.SmartFake
    implements _i6.FunctionsClient {
  _FakeFunctionsClient_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseStorageClient_6 extends _i1.SmartFake
    implements _i6.SupabaseStorageClient {
  _FakeSupabaseStorageClient_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeClient_7 extends _i1.SmartFake
    implements _i6.RealtimeClient {
  _FakeRealtimeClient_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestClient_8 extends _i1.SmartFake
    implements _i6.PostgrestClient {
  _FakePostgrestClient_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueClient_9 extends _i1.SmartFake implements _i6.GoTrueClient {
  _FakeGoTrueClient_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQueryBuilder_10 extends _i1.SmartFake
    implements _i6.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQuerySchema_11 extends _i1.SmartFake
    implements _i6.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestFilterBuilder_12<T1> extends _i1.SmartFake
    implements _i6.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeChannel_13 extends _i1.SmartFake
    implements _i6.RealtimeChannel {
  _FakeRealtimeChannel_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueAdminApi_14 extends _i1.SmartFake
    implements _i6.GoTrueAdminApi {
  _FakeGoTrueAdminApi_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueMFAApi_15 extends _i1.SmartFake implements _i6.GoTrueMFAApi {
  _FakeGoTrueMFAApi_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthResponse_16 extends _i1.SmartFake implements _i6.AuthResponse {
  _FakeAuthResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOAuthResponse_17 extends _i1.SmartFake implements _i6.OAuthResponse {
  _FakeOAuthResponse_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthSessionUrlResponse_18 extends _i1.SmartFake
    implements _i6.AuthSessionUrlResponse {
  _FakeAuthSessionUrlResponse_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResendResponse_19 extends _i1.SmartFake
    implements _i6.ResendResponse {
  _FakeResendResponse_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserResponse_20 extends _i1.SmartFake implements _i6.UserResponse {
  _FakeUserResponse_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObject_21 extends _i1.SmartFake implements Object {
  _FakeObject_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EventProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventProvider extends _i1.Mock implements _i7.EventProvider {
  MockEventProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Api get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeApi_0(
          this,
          Invocation.getter(#api),
        ),
      ) as _i2.Api);

  @override
  set api(_i2.Api? _api) => super.noSuchMethod(
        Invocation.setter(
          #api,
          _api,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<List<_i9.Event>> get recommendations => (super.noSuchMethod(
        Invocation.getter(#recommendations),
        returnValue: _i8.Future<List<_i9.Event>>.value(<_i9.Event>[]),
      ) as _i8.Future<List<_i9.Event>>);

  @override
  _i8.Future<List<_i9.Event>> get eventsHome => (super.noSuchMethod(
        Invocation.getter(#eventsHome),
        returnValue: _i8.Future<List<_i9.Event>>.value(<_i9.Event>[]),
      ) as _i8.Future<List<_i9.Event>>);

  @override
  _i8.Future<List<_i9.Event>> get eventsRsvp => (super.noSuchMethod(
        Invocation.getter(#eventsRsvp),
        returnValue: _i8.Future<List<_i9.Event>>.value(<_i9.Event>[]),
      ) as _i8.Future<List<_i9.Event>>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i8.Future<void> refreshEvents(String? JWT) => (super.noSuchMethod(
        Invocation.method(
          #refreshEvents,
          [JWT],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> refreshRSVPEvents(
    String? userId,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshRSVPEvents,
          [
            userId,
            JWT,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> refreshRecommendations(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshRecommendations,
          [userId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i9.Category>> fetchCategories(String? JWT) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCategories,
          [JWT],
        ),
        returnValue: _i8.Future<List<_i9.Category>>.value(<_i9.Category>[]),
      ) as _i8.Future<List<_i9.Category>>);

  @override
  void fetchfortheFirstTimeRsvp(
    String? userId,
    String? JWT,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #fetchfortheFirstTimeRsvp,
          [
            userId,
            JWT,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addEventSaved(
    _i9.Event? event,
    String? JWT,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addEventSaved,
          [
            event,
            JWT,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeEventSaved(
    _i9.Event? event,
    String? JWT,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeEventSaved,
          [
            event,
            JWT,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<_i9.Event?> getEventById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getEventById,
          [id],
        ),
        returnValue: _i8.Future<_i9.Event?>.value(),
      ) as _i8.Future<_i9.Event?>);

  @override
  _i8.Future<_i9.Event?> getEventByIdR(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getEventByIdR,
          [id],
        ),
        returnValue: _i8.Future<_i9.Event?>.value(),
      ) as _i8.Future<_i9.Event?>);

  @override
  _i8.Future<List<_i9.Event>> getHostEvents(
    String? hostId,
    String? JWT,
    String? role,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHostEvents,
          [
            hostId,
            JWT,
            role,
          ],
        ),
        returnValue: _i8.Future<List<_i9.Event>>.value(<_i9.Event>[]),
      ) as _i8.Future<List<_i9.Event>>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [userProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockuserProvider extends _i1.Mock implements _i3.userProvider {
  MockuserProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Api get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeApi_0(
          this,
          Invocation.getter(#api),
        ),
      ) as _i2.Api);

  @override
  set api(_i2.Api? _api) => super.noSuchMethod(
        Invocation.setter(
          #api,
          _api,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set profileimage(String? _profileimage) => super.noSuchMethod(
        Invocation.setter(
          #profileimage,
          _profileimage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get Fullname => (super.noSuchMethod(
        Invocation.getter(#Fullname),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#Fullname),
        ),
      ) as String);

  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#email),
        ),
      ) as String);

  @override
  String get password => (super.noSuchMethod(
        Invocation.getter(#password),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#password),
        ),
      ) as String);

  @override
  String get role => (super.noSuchMethod(
        Invocation.getter(#role),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#role),
        ),
      ) as String);

  @override
  String get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
      ) as String);

  @override
  bool get isGuest => (super.noSuchMethod(
        Invocation.getter(#isGuest),
        returnValue: false,
      ) as bool);

  @override
  String get JWT => (super.noSuchMethod(
        Invocation.getter(#JWT),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#JWT),
        ),
      ) as String);

  @override
  set JWT(String? value) => super.noSuchMethod(
        Invocation.setter(
          #JWT,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set generalapplications(_i8.Future<_i3.GeneralApplications>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #generalapplications,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set Fullname(String? value) => super.noSuchMethod(
        Invocation.setter(
          #Fullname,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set email(String? value) => super.noSuchMethod(
        Invocation.setter(
          #email,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set password(String? value) => super.noSuchMethod(
        Invocation.setter(
          #password,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set profileImage(String? value) => super.noSuchMethod(
        Invocation.setter(
          #profileImage,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set role(String? value) => super.noSuchMethod(
        Invocation.setter(
          #role,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userId(String? value) => super.noSuchMethod(
        Invocation.setter(
          #userId,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isGuest(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isGuest,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setUserData({
    required String? userId,
    required String? fullName,
    required String? email,
    String? password,
    required String? role,
    String? profileImage,
    required bool? isGuest,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setUserData,
          [],
          {
            #userId: userId,
            #fullName: fullName,
            #email: email,
            #password: password,
            #role: role,
            #profileImage: profileImage,
            #isGuest: isGuest,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setGuestUser() => super.noSuchMethod(
        Invocation.method(
          #setGuestUser,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearUser() => super.noSuchMethod(
        Invocation.method(
          #clearUser,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> Generalusers(String? JWT) => (super.noSuchMethod(
        Invocation.method(
          #Generalusers,
          [JWT],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> refreshApplications() => (super.noSuchMethod(
        Invocation.method(
          #refreshApplications,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Api].
///
/// See the documentation for Mockito's code generation for more information.
class MockApi extends _i1.Mock implements _i2.Api {
  MockApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get jwtKey => (super.noSuchMethod(
        Invocation.getter(#jwtKey),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#jwtKey),
        ),
      ) as String);

  @override
  set jwtKey(String? _jwtKey) => super.noSuchMethod(
        Invocation.setter(
          #jwtKey,
          _jwtKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get refreshToken => (super.noSuchMethod(
        Invocation.getter(#refreshToken),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#refreshToken),
        ),
      ) as String);

  @override
  set refreshToken(String? _refreshToken) => super.noSuchMethod(
        Invocation.setter(
          #refreshToken,
          _refreshToken,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set JWT(dynamic _JWT) => super.noSuchMethod(
        Invocation.setter(
          #JWT,
          _JWT,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<Map<String, dynamic>> loginUser(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> getUserDetails() => (super.noSuchMethod(
        Invocation.method(
          #getUserDetails,
          [],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<List<_i9.Event>> getAllEvents(String? JWT) => (super.noSuchMethod(
        Invocation.method(
          #getAllEvents,
          [JWT],
        ),
        returnValue: _i8.Future<List<_i9.Event>>.value(<_i9.Event>[]),
      ) as _i8.Future<List<_i9.Event>>);

  @override
  _i8.Future<List<_i9.Event>> getAllSavedEvents(String? JWT) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSavedEvents,
          [JWT],
        ),
        returnValue: _i8.Future<List<_i9.Event>>.value(<_i9.Event>[]),
      ) as _i8.Future<List<_i9.Event>>);

  @override
  _i8.Future<List<_i9.Event>> getRecommendedEvents(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedEvents,
          [userId],
        ),
        returnValue: _i8.Future<List<_i9.Event>>.value(<_i9.Event>[]),
      ) as _i8.Future<List<_i9.Event>>);

  @override
  _i8.Future<List<dynamic>> getRSVPEvents(String? JWT) => (super.noSuchMethod(
        Invocation.method(
          #getRSVPEvents,
          [JWT],
        ),
        returnValue: _i8.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i8.Future<List<dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> postChangeUser(
    String? name,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postChangeUser,
          [
            name,
            userId,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> updatePassword(
    String? password,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [
            password,
            userId,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> createEvent({
    required String? title,
    required String? description,
    required DateTime? startDate,
    required DateTime? endDate,
    required String? locationId,
    int? maxParticipants,
    Map<String, String>? metadata,
    bool? isPrivate,
    required String? JWT,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [],
          {
            #title: title,
            #description: description,
            #startDate: startDate,
            #endDate: endDate,
            #locationId: locationId,
            #maxParticipants: maxParticipants,
            #metadata: metadata,
            #isPrivate: isPrivate,
            #JWT: JWT,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> rsvpEvent(
    String? eventId,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rsvpEvent,
          [
            eventId,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> putSavedEvent(
    String? eventId,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putSavedEvent,
          [
            eventId,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> DeleteSavedEvent(
    String? eventId,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #DeleteSavedEvent,
          [
            eventId,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<List<_i12.AppNotification>> getAllNotification(
          {required String? JWT}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllNotification,
          [],
          {#JWT: JWT},
        ),
        returnValue: _i8.Future<List<_i12.AppNotification>>.value(
            <_i12.AppNotification>[]),
      ) as _i8.Future<List<_i12.AppNotification>>);

  @override
  _i8.Future<Map<String, dynamic>> AcceptInvite({
    String? JWT,
    String? notificationId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #AcceptInvite,
          [],
          {
            #JWT: JWT,
            #notificationId: notificationId,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> postNotifyUser({
    required String? userId,
    required String? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postNotifyUser,
          [],
          {
            #userId: userId,
            #message: message,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<_i3.GeneralApplications> getGeneralusersToHost(String? JWT) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGeneralusersToHost,
          [JWT],
        ),
        returnValue: _i8.Future<_i3.GeneralApplications>.value(
            _FakeGeneralApplications_1(
          this,
          Invocation.method(
            #getGeneralusersToHost,
            [JWT],
          ),
        )),
      ) as _i8.Future<_i3.GeneralApplications>);

  @override
  _i8.Future<Map<String, dynamic>> DeletersvpEvent(
    String? eventId,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #DeletersvpEvent,
          [
            eventId,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> DeleteEvent(
    String? eventId,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #DeleteEvent,
          [
            eventId,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> postUsername(
    String? username,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUsername,
          [
            username,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> getUser(String? JWT) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [JWT],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<List<_i9.Event>> getAllEventsGuest() => (super.noSuchMethod(
        Invocation.method(
          #getAllEventsGuest,
          [],
        ),
        returnValue: _i8.Future<List<_i9.Event>>.value(<_i9.Event>[]),
      ) as _i8.Future<List<_i9.Event>>);

  @override
  _i8.Future<Map<String, dynamic>> updateEvent({
    required String? JWT,
    required String? eventId,
    required String? title,
    required String? description,
    required DateTime? startDate,
    required DateTime? endDate,
    required String? locationId,
    int? maxParticipants,
    Map<String, String>? metadata,
    bool? isPrivate = false,
    List<String>? media,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEvent,
          [],
          {
            #JWT: JWT,
            #eventId: eventId,
            #title: title,
            #description: description,
            #startDate: startDate,
            #endDate: endDate,
            #locationId: locationId,
            #maxParticipants: maxParticipants,
            #metadata: metadata,
            #isPrivate: isPrivate,
            #media: media,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> uploadImage(
    _i13.Uint8List? imageBytes,
    String? userid,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImage,
          [
            imageBytes,
            userid,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> eventUploadImage(
    _i13.Uint8List? mediaBytes,
    String? JWT,
    String? eventId,
    String? originalFilename,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #eventUploadImage,
          [
            mediaBytes,
            JWT,
            eventId,
            originalFilename,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> applyForHost({
    required String? reason,
    required String? duration,
    required DateTime? fromWhen,
    String? studentEmail,
    _i13.Uint8List? proofImage,
    required String? JWT,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #applyForHost,
          [],
          {
            #reason: reason,
            #duration: duration,
            #fromWhen: fromWhen,
            #studentEmail: studentEmail,
            #proofImage: proofImage,
            #JWT: JWT,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> broadcastEvent(
    String? eventId,
    String? message,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #broadcastEvent,
          [
            eventId,
            message,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> broadcast(
    String? message,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #broadcast,
          [
            message,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> AcceptApplication({
    required String? JWT,
    required String? applicationId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #AcceptApplication,
          [],
          {
            #JWT: JWT,
            #applicationId: applicationId,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> DeclineApplication({
    required String? JWT,
    required String? applicationId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #DeclineApplication,
          [],
          {
            #JWT: JWT,
            #applicationId: applicationId,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> DemoteApplicant({
    required String? JWT,
    required String? userId,
    required String? applicationId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #DemoteApplicant,
          [],
          {
            #JWT: JWT,
            #userId: userId,
            #applicationId: applicationId,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> Acknowledgeapplication(
          {required String? JWT}) =>
      (super.noSuchMethod(
        Invocation.method(
          #Acknowledgeapplication,
          [],
          {#JWT: JWT},
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<List<_i9.Category>> getCategories({required String? JWT}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
          {#JWT: JWT},
        ),
        returnValue: _i8.Future<List<_i9.Category>>.value(<_i9.Category>[]),
      ) as _i8.Future<List<_i9.Category>>);

  @override
  _i8.Future<Map<String, dynamic>> postRecommendationData({
    required String? userId,
    required Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postRecommendationData,
          [],
          {
            #userId: userId,
            #data: data,
          },
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> rateEvent(
    String? eventId,
    String? JWT,
    int? rating,
    String? comment,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rateEvent,
          [
            eventId,
            JWT,
            rating,
            comment,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> deleteEventMedia(
    String? imageName,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEventMedia,
          [
            imageName,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> deleteNotification(
    String? notificationId,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [
            notificationId,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> getAllEventsAnalytics(String? JWT) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllEventsAnalytics,
          [JWT],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> getAllHostsAnalytics(String? JWT) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllHostsAnalytics,
          [JWT],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> getHostEventAnalytics(
    String? userId,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHostEventAnalytics,
          [
            userId,
            JWT,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> getAllPopularEvents(String? JWT) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPopularEvents,
          [JWT],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<Map<String, dynamic>> getHostPopularEvents(String? JWT) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHostPopularEvents,
          [JWT],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<void> markSeen(
    String? eventID,
    String? JWT,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markSeen,
          [
            eventID,
            JWT,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<Map<String, dynamic>> getAutofillData(
    String? JWT,
    String? eventName,
    String? eventDescription,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAutofillData,
          [
            JWT,
            eventName,
            eventDescription,
          ],
        ),
        returnValue:
            _i8.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i8.Future<Map<String, dynamic>>);
}

/// A class which mocks [ImagePicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePicker extends _i1.Mock implements _i14.ImagePicker {
  MockImagePicker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i4.XFile?> pickImage({
    required _i4.ImageSource? source,
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    _i4.CameraDevice? preferredCameraDevice = _i4.CameraDevice.rear,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [],
          {
            #source: source,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #preferredCameraDevice: preferredCameraDevice,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i8.Future<_i4.XFile?>.value(),
      ) as _i8.Future<_i4.XFile?>);

  @override
  _i8.Future<List<_i4.XFile>> pickMultiImage({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultiImage,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i8.Future<List<_i4.XFile>>.value(<_i4.XFile>[]),
      ) as _i8.Future<List<_i4.XFile>>);

  @override
  _i8.Future<_i4.XFile?> pickMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i8.Future<_i4.XFile?>.value(),
      ) as _i8.Future<_i4.XFile?>);

  @override
  _i8.Future<List<_i4.XFile>> pickMultipleMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultipleMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i8.Future<List<_i4.XFile>>.value(<_i4.XFile>[]),
      ) as _i8.Future<List<_i4.XFile>>);

  @override
  _i8.Future<_i4.XFile?> pickVideo({
    required _i4.ImageSource? source,
    _i4.CameraDevice? preferredCameraDevice = _i4.CameraDevice.rear,
    Duration? maxDuration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickVideo,
          [],
          {
            #source: source,
            #preferredCameraDevice: preferredCameraDevice,
            #maxDuration: maxDuration,
          },
        ),
        returnValue: _i8.Future<_i4.XFile?>.value(),
      ) as _i8.Future<_i4.XFile?>);

  @override
  _i8.Future<_i4.LostDataResponse> retrieveLostData() => (super.noSuchMethod(
        Invocation.method(
          #retrieveLostData,
          [],
        ),
        returnValue:
            _i8.Future<_i4.LostDataResponse>.value(_FakeLostDataResponse_2(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
      ) as _i8.Future<_i4.LostDataResponse>);

  @override
  bool supportsImageSource(_i4.ImageSource? source) => (super.noSuchMethod(
        Invocation.method(
          #supportsImageSource,
          [source],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [notificationProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MocknotificationProvider extends _i1.Mock
    implements _i15.notificationProvider {
  MocknotificationProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Api get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeApi_0(
          this,
          Invocation.getter(#api),
        ),
      ) as _i2.Api);

  @override
  set api(_i2.Api? _api) => super.noSuchMethod(
        Invocation.setter(
          #api,
          _api,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i12.AppNotification> get notifications => (super.noSuchMethod(
        Invocation.getter(#notifications),
        returnValue: <_i12.AppNotification>[],
      ) as List<_i12.AppNotification>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i8.Future<void> fetchNotifications(String? JWT) => (super.noSuchMethod(
        Invocation.method(
          #fetchNotifications,
          [JWT],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> refreshNotifications(String? JWT) => (super.noSuchMethod(
        Invocation.method(
          #refreshNotifications,
          [JWT],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void addNotification(dynamic eventData) => super.noSuchMethod(
        Invocation.method(
          #addNotification,
          [eventData],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeNotification(String? notificationId) => super.noSuchMethod(
        Invocation.method(
          #removeNotification,
          [notificationId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ThemeNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeNotifier extends _i1.Mock implements _i16.ThemeNotifier {
  MockThemeNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ThemeData get lightTheme => (super.noSuchMethod(
        Invocation.getter(#lightTheme),
        returnValue: _FakeThemeData_3(
          this,
          Invocation.getter(#lightTheme),
        ),
      ) as _i5.ThemeData);

  @override
  _i5.ThemeData get darkTheme => (super.noSuchMethod(
        Invocation.getter(#darkTheme),
        returnValue: _FakeThemeData_3(
          this,
          Invocation.getter(#darkTheme),
        ),
      ) as _i5.ThemeData);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.ThemeData getTheme() => (super.noSuchMethod(
        Invocation.method(
          #getTheme,
          [],
        ),
        returnValue: _FakeThemeData_3(
          this,
          Invocation.method(
            #getTheme,
            [],
          ),
        ),
      ) as _i5.ThemeData);

  @override
  void setDarkMode() => super.noSuchMethod(
        Invocation.method(
          #setDarkMode,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLightMode() => super.noSuchMethod(
        Invocation.method(
          #setLightMode,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Supabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabase extends _i1.Mock implements _i6.Supabase {
  MockSupabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SupabaseClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeSupabaseClient_4(
          this,
          Invocation.getter(#client),
        ),
      ) as _i6.SupabaseClient);

  @override
  set client(_i6.SupabaseClient? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void log(
    String? msg, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #log,
          [
            msg,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i6.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.FunctionsClient get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctionsClient_5(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i6.FunctionsClient);

  @override
  set functions(_i6.FunctionsClient? _functions) => super.noSuchMethod(
        Invocation.setter(
          #functions,
          _functions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.SupabaseStorageClient get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSupabaseStorageClient_6(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i6.SupabaseStorageClient);

  @override
  set storage(_i6.SupabaseStorageClient? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.RealtimeClient get realtime => (super.noSuchMethod(
        Invocation.getter(#realtime),
        returnValue: _FakeRealtimeClient_7(
          this,
          Invocation.getter(#realtime),
        ),
      ) as _i6.RealtimeClient);

  @override
  set realtime(_i6.RealtimeClient? _realtime) => super.noSuchMethod(
        Invocation.setter(
          #realtime,
          _realtime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.PostgrestClient get rest => (super.noSuchMethod(
        Invocation.getter(#rest),
        returnValue: _FakePostgrestClient_8(
          this,
          Invocation.getter(#rest),
        ),
      ) as _i6.PostgrestClient);

  @override
  set rest(_i6.PostgrestClient? _rest) => super.noSuchMethod(
        Invocation.setter(
          #rest,
          _rest,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          headers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.GoTrueClient get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeGoTrueClient_9(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i6.GoTrueClient);

  @override
  _i6.SupabaseQueryBuilder from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakeSupabaseQueryBuilder_10(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i6.SupabaseQueryBuilder);

  @override
  _i6.SupabaseQuerySchema schema(String? schema) => (super.noSuchMethod(
        Invocation.method(
          #schema,
          [schema],
        ),
        returnValue: _FakeSupabaseQuerySchema_11(
          this,
          Invocation.method(
            #schema,
            [schema],
          ),
        ),
      ) as _i6.SupabaseQuerySchema);

  @override
  _i6.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {#params: params},
        ),
        returnValue: _FakePostgrestFilterBuilder_12<T>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {#params: params},
          ),
        ),
      ) as _i6.PostgrestFilterBuilder<T>);

  @override
  _i6.RealtimeChannel channel(
    String? name, {
    _i6.RealtimeChannelConfig? opts = const _i6.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [name],
          {#opts: opts},
        ),
        returnValue: _FakeRealtimeChannel_13(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
      ) as _i6.RealtimeChannel);

  @override
  List<_i6.RealtimeChannel> getChannels() => (super.noSuchMethod(
        Invocation.method(
          #getChannels,
          [],
        ),
        returnValue: <_i6.RealtimeChannel>[],
      ) as List<_i6.RealtimeChannel>);

  @override
  _i8.Future<String> removeChannel(_i6.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channel],
        ),
        returnValue: _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #removeChannel,
            [channel],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<List<String>> removeAllChannels() => (super.noSuchMethod(
        Invocation.method(
          #removeAllChannels,
          [],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [GoTrueClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoTrueClient extends _i1.Mock implements _i6.GoTrueClient {
  MockGoTrueClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.GoTrueAdminApi get admin => (super.noSuchMethod(
        Invocation.getter(#admin),
        returnValue: _FakeGoTrueAdminApi_14(
          this,
          Invocation.getter(#admin),
        ),
      ) as _i6.GoTrueAdminApi);

  @override
  set admin(_i6.GoTrueAdminApi? _admin) => super.noSuchMethod(
        Invocation.setter(
          #admin,
          _admin,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.GoTrueMFAApi get mfa => (super.noSuchMethod(
        Invocation.getter(#mfa),
        returnValue: _FakeGoTrueMFAApi_15(
          this,
          Invocation.getter(#mfa),
        ),
      ) as _i6.GoTrueMFAApi);

  @override
  set mfa(_i6.GoTrueMFAApi? _mfa) => super.noSuchMethod(
        Invocation.setter(
          #mfa,
          _mfa,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Stream<_i6.AuthState> get onAuthStateChange => (super.noSuchMethod(
        Invocation.getter(#onAuthStateChange),
        returnValue: _i8.Stream<_i6.AuthState>.empty(),
      ) as _i8.Stream<_i6.AuthState>);

  @override
  _i8.Stream<_i6.AuthState> get onAuthStateChangeSync => (super.noSuchMethod(
        Invocation.getter(#onAuthStateChangeSync),
        returnValue: _i8.Stream<_i6.AuthState>.empty(),
      ) as _i8.Stream<_i6.AuthState>);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i8.Future<_i6.AuthResponse> signInAnonymously({
    Map<String, dynamic>? data,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
          {
            #data: data,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i8.Future<_i6.AuthResponse>.value(_FakeAuthResponse_16(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
            {
              #data: data,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.AuthResponse>);

  @override
  _i8.Future<_i6.AuthResponse> signUp({
    String? email,
    String? phone,
    required String? password,
    String? emailRedirectTo,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i6.OtpChannel? channel = _i6.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #phone: phone,
            #password: password,
            #emailRedirectTo: emailRedirectTo,
            #data: data,
            #captchaToken: captchaToken,
            #channel: channel,
          },
        ),
        returnValue: _i8.Future<_i6.AuthResponse>.value(_FakeAuthResponse_16(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #emailRedirectTo: emailRedirectTo,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            },
          ),
        )),
      ) as _i8.Future<_i6.AuthResponse>);

  @override
  _i8.Future<_i6.AuthResponse> signInWithPassword({
    String? email,
    String? phone,
    required String? password,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPassword,
          [],
          {
            #email: email,
            #phone: phone,
            #password: password,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i8.Future<_i6.AuthResponse>.value(_FakeAuthResponse_16(
          this,
          Invocation.method(
            #signInWithPassword,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.AuthResponse>);

  @override
  _i8.Future<_i6.OAuthResponse> getOAuthSignInUrl({
    required _i6.OAuthProvider? provider,
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOAuthSignInUrl,
          [],
          {
            #provider: provider,
            #redirectTo: redirectTo,
            #scopes: scopes,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i8.Future<_i6.OAuthResponse>.value(_FakeOAuthResponse_17(
          this,
          Invocation.method(
            #getOAuthSignInUrl,
            [],
            {
              #provider: provider,
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            },
          ),
        )),
      ) as _i8.Future<_i6.OAuthResponse>);

  @override
  _i8.Future<_i6.AuthSessionUrlResponse> exchangeCodeForSession(
          String? authCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #exchangeCodeForSession,
          [authCode],
        ),
        returnValue: _i8.Future<_i6.AuthSessionUrlResponse>.value(
            _FakeAuthSessionUrlResponse_18(
          this,
          Invocation.method(
            #exchangeCodeForSession,
            [authCode],
          ),
        )),
      ) as _i8.Future<_i6.AuthSessionUrlResponse>);

  @override
  _i8.Future<_i6.AuthResponse> signInWithIdToken({
    required _i6.OAuthProvider? provider,
    required String? idToken,
    String? accessToken,
    String? nonce,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithIdToken,
          [],
          {
            #provider: provider,
            #idToken: idToken,
            #accessToken: accessToken,
            #nonce: nonce,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i8.Future<_i6.AuthResponse>.value(_FakeAuthResponse_16(
          this,
          Invocation.method(
            #signInWithIdToken,
            [],
            {
              #provider: provider,
              #idToken: idToken,
              #accessToken: accessToken,
              #nonce: nonce,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.AuthResponse>);

  @override
  _i8.Future<void> signInWithOtp({
    String? email,
    String? phone,
    String? emailRedirectTo,
    bool? shouldCreateUser,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i6.OtpChannel? channel = _i6.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithOtp,
          [],
          {
            #email: email,
            #phone: phone,
            #emailRedirectTo: emailRedirectTo,
            #shouldCreateUser: shouldCreateUser,
            #data: data,
            #captchaToken: captchaToken,
            #channel: channel,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.AuthResponse> verifyOTP({
    String? email,
    String? phone,
    String? token,
    required _i6.OtpType? type,
    String? redirectTo,
    String? captchaToken,
    String? tokenHash,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [],
          {
            #email: email,
            #phone: phone,
            #token: token,
            #type: type,
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
            #tokenHash: tokenHash,
          },
        ),
        returnValue: _i8.Future<_i6.AuthResponse>.value(_FakeAuthResponse_16(
          this,
          Invocation.method(
            #verifyOTP,
            [],
            {
              #email: email,
              #phone: phone,
              #token: token,
              #type: type,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
              #tokenHash: tokenHash,
            },
          ),
        )),
      ) as _i8.Future<_i6.AuthResponse>);

  @override
  _i8.Future<String> getSSOSignInUrl({
    String? providerId,
    String? domain,
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSSOSignInUrl,
          [],
          {
            #providerId: providerId,
            #domain: domain,
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getSSOSignInUrl,
            [],
            {
              #providerId: providerId,
              #domain: domain,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<_i6.AuthResponse> refreshSession([String? refreshToken]) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshSession,
          [refreshToken],
        ),
        returnValue: _i8.Future<_i6.AuthResponse>.value(_FakeAuthResponse_16(
          this,
          Invocation.method(
            #refreshSession,
            [refreshToken],
          ),
        )),
      ) as _i8.Future<_i6.AuthResponse>);

  @override
  _i8.Future<void> reauthenticate() => (super.noSuchMethod(
        Invocation.method(
          #reauthenticate,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.ResendResponse> resend({
    String? email,
    String? phone,
    required _i6.OtpType? type,
    String? emailRedirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resend,
          [],
          {
            #email: email,
            #phone: phone,
            #type: type,
            #emailRedirectTo: emailRedirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue:
            _i8.Future<_i6.ResendResponse>.value(_FakeResendResponse_19(
          this,
          Invocation.method(
            #resend,
            [],
            {
              #email: email,
              #phone: phone,
              #type: type,
              #emailRedirectTo: emailRedirectTo,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i8.Future<_i6.ResendResponse>);

  @override
  _i8.Future<_i6.UserResponse> getUser([String? jwt]) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [jwt],
        ),
        returnValue: _i8.Future<_i6.UserResponse>.value(_FakeUserResponse_20(
          this,
          Invocation.method(
            #getUser,
            [jwt],
          ),
        )),
      ) as _i8.Future<_i6.UserResponse>);

  @override
  _i8.Future<_i6.UserResponse> updateUser(
    _i6.UserAttributes? attributes, {
    String? emailRedirectTo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [attributes],
          {#emailRedirectTo: emailRedirectTo},
        ),
        returnValue: _i8.Future<_i6.UserResponse>.value(_FakeUserResponse_20(
          this,
          Invocation.method(
            #updateUser,
            [attributes],
            {#emailRedirectTo: emailRedirectTo},
          ),
        )),
      ) as _i8.Future<_i6.UserResponse>);

  @override
  _i8.Future<_i6.AuthResponse> setSession(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSession,
          [refreshToken],
        ),
        returnValue: _i8.Future<_i6.AuthResponse>.value(_FakeAuthResponse_16(
          this,
          Invocation.method(
            #setSession,
            [refreshToken],
          ),
        )),
      ) as _i8.Future<_i6.AuthResponse>);

  @override
  _i8.Future<_i6.AuthSessionUrlResponse> getSessionFromUrl(
    Uri? originUrl, {
    bool? storeSession = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSessionFromUrl,
          [originUrl],
          {#storeSession: storeSession},
        ),
        returnValue: _i8.Future<_i6.AuthSessionUrlResponse>.value(
            _FakeAuthSessionUrlResponse_18(
          this,
          Invocation.method(
            #getSessionFromUrl,
            [originUrl],
            {#storeSession: storeSession},
          ),
        )),
      ) as _i8.Future<_i6.AuthSessionUrlResponse>);

  @override
  _i8.Future<void> signOut(
          {_i6.SignOutScope? scope = _i6.SignOutScope.local}) =>
      (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
          {#scope: scope},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> resetPasswordForEmail(
    String? email, {
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordForEmail,
          [email],
          {
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i6.UserIdentity>> getUserIdentities() => (super.noSuchMethod(
        Invocation.method(
          #getUserIdentities,
          [],
        ),
        returnValue:
            _i8.Future<List<_i6.UserIdentity>>.value(<_i6.UserIdentity>[]),
      ) as _i8.Future<List<_i6.UserIdentity>>);

  @override
  _i8.Future<_i6.OAuthResponse> getLinkIdentityUrl(
    _i6.OAuthProvider? provider, {
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLinkIdentityUrl,
          [provider],
          {
            #redirectTo: redirectTo,
            #scopes: scopes,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i8.Future<_i6.OAuthResponse>.value(_FakeOAuthResponse_17(
          this,
          Invocation.method(
            #getLinkIdentityUrl,
            [provider],
            {
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            },
          ),
        )),
      ) as _i8.Future<_i6.OAuthResponse>);

  @override
  _i8.Future<void> unlinkIdentity(_i6.UserIdentity? identity) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlinkIdentity,
          [identity],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setInitialSession(String? jsonStr) => (super.noSuchMethod(
        Invocation.method(
          #setInitialSession,
          [jsonStr],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.AuthResponse> recoverSession(String? jsonStr) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverSession,
          [jsonStr],
        ),
        returnValue: _i8.Future<_i6.AuthResponse>.value(_FakeAuthResponse_16(
          this,
          Invocation.method(
            #recoverSession,
            [jsonStr],
          ),
        )),
      ) as _i8.Future<_i6.AuthResponse>);

  @override
  void startAutoRefresh() => super.noSuchMethod(
        Invocation.method(
          #startAutoRefresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopAutoRefresh() => super.noSuchMethod(
        Invocation.method(
          #stopAutoRefresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyAllSubscribers(_i6.AuthChangeEvent? event) => super.noSuchMethod(
        Invocation.method(
          #notifyAllSubscribers,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Object notifyException(
    Object? exception, [
    StackTrace? stackTrace,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyException,
          [
            exception,
            stackTrace,
          ],
        ),
        returnValue: _FakeObject_21(
          this,
          Invocation.method(
            #notifyException,
            [
              exception,
              stackTrace,
            ],
          ),
        ),
      ) as Object);
}
