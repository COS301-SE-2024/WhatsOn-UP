name: Backend workflow with Gradle

on:
    push:
        branches:
            - develop
    pull_request:
        branches:
            - develop

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            DB_URL: ${{ secrets.DB_URL }}
            DB_USERNAME: ${{ secrets.DB_USERNAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}

        steps:
            - name: Checkout the code
              uses: actions/checkout@v2

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                java-version: '17'
                distribution: 'temurin'
                
            # - name: Grant execute permission for gradlew
            #   run: chmod +x ./src/Backend/gradlew

            # - name: Assemble with Gradle
            #   run: ./gradlew assemble
            #   working-directory: ./src/Backend

            # - name: Run tests with Gradle
            #   run:  ./gradlew clean test codeCoverageReport 
            #   working-directory: ./src/Backend

            # - name: Upload coverage reports to Codecov
            #   uses: codecov/codecov-action@v4.0.1
            #   with:
            #       token: ${{ secrets.CODECOV_TOKEN }}

            - name: Log into Docker Hub
              run: echo $DOCKER_PASSWORD | docker login -u devforce123 --password-stdin

            - name: Build Docker image
              working-directory: ./src/Backend
              run: docker build -t devforce123/backend .
      
            # - name: Push Docker image to Docker Hub
            #   working-directory: ./src/Backend
            #   run: docker push devforce123/backend
            
            - name: Deploy to Server 1
              uses: easingthemes/ssh-deploy@main
              with:
                SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
                REMOTE_HOST: ${{ secrets.HOST_DNS }}
                REMOTE_USER: ${{ secrets.USERNAME }}
                TARGET: ${{ secrets.TARGET_DIR }}
            
            - name: Executing remote SSH commands using SSH key
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.HOST_DNS }}
                username: ${{ secrets.USERNAME }}
                key: ${{ secrets.EC2_SSH_KEY }}
                script: |
                  sudo docker stop backend
                  sudo docker pull devforce123/backend
                  sudo docker run -d --name backend -p 8080:8080 --memory 2g devforce123/backend

                  

           



