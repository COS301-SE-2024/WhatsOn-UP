name: CI Pipeline

on:
  push:
    branches:
      - develop
      - main
    paths:
      - 'src/Frontend/**'
      - 'src/Backend/**'
      - '.github/workflows/ci.yml'
      - '.github/workflows/flutter.yml'
  pull_request:
    branches:
      - develop
      - main
    paths:
      - 'src/Frontend/**'
      - 'src/Backend/**'
      - '.github/workflows/ci.yml'
      - '.github/workflows/flutter.yml'

jobs:
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.1'

    - name: Install dependencies
      working-directory: ./src/Frontend
      run: flutter pub get

    - name: Install lcov
      run: sudo apt-get install -y lcov

    - name: Run tests with coverage
      working-directory: ./src/Frontend
      run: flutter test --coverage

    - name: Verify lcov report
      run: |
        if [ ! -f ./src/Frontend/coverage/lcov.info ]; then
          echo "lcov report not generated!"
          exit 1
        fi
      working-directory: ./src/Frontend

  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: frontend-test
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
                
    - name: Grant execute permission for gradlew
      run: chmod +x ./src/Backend/gradlew

    - name: Assemble with Gradle
      run: ./gradlew assemble
      working-directory: ./src/Backend

    - name: Install lcov and Python3
      run: |
        sudo apt-get update
        sudo apt-get install -y lcov python3-pip
      
    - name: Run tests with Gradle
      working-directory: ./src/Backend
      run: ./gradlew clean test codeCoverageReport
      
    - name: Convert Jacoco report to lcov
      run: |
        python3 scripts/jacoco2lcov.py ./src/Backend/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml backend.lcov.info
      
    - name: Merge coverage reports
      run: |
        lcov -a ./src/Frontend/coverage/lcov.info -a backend.lcov.info -o merged.lcov.info
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: merged.lcov.info
        flags: unittests
        name: codecov-umbrella
